#!groovyâ€‹

// The Fragalysis Database Backup image.

pipeline {

  agent { label 'buildah-slave' }

  environment {
    // Registry details
    REGISTRIY_USER = 'jenkins'
    REGISTRY = 'docker-registry.default:5000'
    STREAM_IMAGE = "${REGISTRY}/fragalysis-cicd/backup-stream:latest"

    // Slack channel for all notifictions
    SLACK_CICD_CHANNEL = 'dls-cicd-backupimage'
    // Slack channel to be used for errors/failures
    // (which also go to the CI/CD channel)
    SLACK_ALERT_CHANNEL = 'dls-alerts'
  }

  stages {

    stage('Build Image') {
      steps {
        slackSend channel: "#${env.SLACK_CICD_CHANNEL}",
                  message: "Backup image build ${env.BUILD_NUMBER} - starting..."
        script {
          TOKEN = sh(script: 'oc whoami -t', returnStdout: true).trim()
        }
        dir('images/backup') {
          sh "buildah bud --format docker -f Dockerfile -t ${env.STREAM_IMAGE} ."
        }
      }
    }

    stage('Push Image') {
      steps {
        script {
          TOKEN = sh(script: 'oc whoami -t', returnStdout: true).trim()
        }
        sh "podman login --tls-verify=false --username ${env.REGISTRY_USER} --password ${TOKEN} ${env.REGISTRY}"
        sh "buildah push --tls-verify=false ${env.STREAM_IMAGE} docker://${env.STREAM_IMAGE}"
        sh "podman logout ${env.REGISTRY}"
        sh "buildah images"
      }
    }

  }

  // Post-job actions.
  // See https://jenkins.io/doc/book/pipeline/syntax/#post
  post {

    success {
      slackSend channel: "#${env.SLACK_CICD_CHANNEL}",
                color: 'good',
                message: "Backup image build ${env.BUILD_NUMBER} - complete"
    }

    failure {
      slackSend channel: "#${env.SLACK_CICD_CHANNEL}",
                color: 'danger',
                message: "Backup image build ${env.BUILD_NUMBER} - failed (${env.BUILD_URL})"
      slackSend channel: "#${env.SLACK_ALERT_CHANNEL}",
                color: 'danger',
                message: "Backup image build ${env.BUILD_NUMBER} - failed (${env.BUILD_URL})"
    }

    fixed {
      slackSend channel: "#${env.SLACK_ALERT_CHANNEL}",
                color: 'good',
                message: "Backup image build - fixed"
    }

  }

}
