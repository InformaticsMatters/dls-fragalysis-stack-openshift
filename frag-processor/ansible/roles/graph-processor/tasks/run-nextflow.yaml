---

- name: Check nextflow
  shell: echo -n $(pgrep java)
  register: nextflow_result

- name: Set nextflow command
  set_fact:
    nextflow_cmd: >-
      nextflow run graph-from-standard.nf
      -with-docker busybox
      --limit {{ process_limit }}
      --skip {{ process_skip }}
      -executor.queueSize {{ nextflow_queue_size }}
      {{ nextflow_extra_args }}
      -with-report
      -with-trace
      -with-timeline

- name: Display nextflow command
  debug:
    var: nextflow_cmd

- name: Run nextflow (nohup)
  shell: nohup {{ nextflow_cmd }} </dev/null >/dev/null 2>&1 &
  args:
    chdir: "{{ lookup('env','HOME') }}/{{ process_dir }}"
  when: nextflow_result.stdout|length == 0

#Â Optionally wait for nextflow, polling at 10-minute intervals.
# After pausing for a short time to give nextflow a chance to run.

- name: Pre-poll pause
  pause:
    seconds: 10
  when: nextflow_wait

- name: Wait for nextflow
  shell: echo -n $(pgrep java)
  args:
    chdir: "{{ lookup('env','HOME') }}/{{ process_dir }}"
  delay: "{{ nextflow_poll_period_minutes|int * 60 }}"
  retries: "{{ (nextflow_timeout_minutes|int / nextflow_poll_period_minutes|int)|int }}"
  register: result
  until: result.stdout|length == 0
  when: nextflow_wait
