---

# Deduplicate results

- name: Create temporary directory
  file:
    path: /tmp
    state: directory

# Deduplicate Attributes

- name: Check compressed Attributes
  stat:
    path: "{{ lookup('env','HOME') }}/attributes.txt.gz"
  register: attributes_gz_file

- name: Deduplicate Attributes
  shell: >-
    zcat *.{{ item }}.gz
    | sort -S16G --parallel=16 --temporary-directory=/tmp -u > {{ tgt }}
  environment:
    LC_ALL: C
  args:
    creates: "{{ tgt }}"
    chdir: "{{ lookup('env','HOME') }}/{{ process_dir }}/results"
  vars:
    tgt: "{{ lookup('env','HOME') }}/attributes.txt"
  when: not attributes_gz_file.stat.exists

- name: Collect attribute count
  shell: wc -l {{ lookup('env','HOME') }}/attributes.txt
  register: attributes_lines
  environment:
    LC_ALL: C
  when: not attributes_gz_file.stat.exists

- name: Dsiaply edge count
  debug:
    var: attributes_lines.stdout
  when: not attributes_gz_file.stat.exists

# Deduplicate Nodes

- name: Check compressed Nodes
  stat:
    path: "{{ lookup('env','HOME') }}/nodes.txt.gz"
  register: nodes_gz_file

- name: Deduplicate Nodes
  shell: >-
    zcat *.{{ item }}.gz
    | sort -S16G --parallel=16 --temporary-directory=/tmp -u > {{ tgt }}
  environment:
    LC_ALL: C
  args:
    creates: "{{ tgt }}"
    chdir: "{{ lookup('env','HOME') }}/{{ process_dir }}/results"
  vars:
    tgt: "{{ lookup('env','HOME') }}/nodes.txt"
  when: not nodes_gz_file.stat.exists

- name: Collect node count
  shell: wc -l {{ lookup('env','HOME') }}/nodes.txt
  register: nodes_lines
  environment:
    LC_ALL: C
  when: not nodes_gz_file.stat.exists

- name: Dsiaply node count
  debug:
    var: nodes_lines.stdout
  when: not nodes_gz_file.stat.exists

# Deduplicate Edges

- name: Check compressed Edges
  stat:
    path: "{{ lookup('env','HOME') }}/edges.txt.gz"
  register: edges_gz_file

- name: Deduplicate Edges
  shell: >-
    zcat *.{{ item }}.gz
    | sort -S16G --parallel=16 --temporary-directory=/tmp -u > {{ tgt }}
  environment:
    LC_ALL: C
  args:
    creates: "{{ tgt }}"
    chdir: "{{ lookup('env','HOME') }}/{{ process_dir }}/results"
  vars:
    tgt: "{{ lookup('env','HOME') }}/edges.txt"
  when: not edges_gz_file.stat.exists

- name: Collect edge count
  shell: wc -l {{ lookup('env','HOME') }}/edges.txt
  register: edges_lines
  environment:
    LC_ALL: C
  when: not edges_gz_file.stat.exists

- name: Dsiaply edge count
  debug:
    var: edges_lines.stdout
  when: not edges_gz_file.stat.exists

# Compress ...

- name: Compress
  shell: gzip {{ tgt }}
  environment:
    LC_ALL: C
  args:
    creates: "{{ tgt }}.gz"
  vars:
    tgt: "{{ lookup('env','HOME') }}/{{ item }}.txt"
  loop:
  - attributes
  - nodes
  - edges
