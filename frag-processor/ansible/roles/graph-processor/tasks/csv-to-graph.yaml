---

# Processes de-duplicated CSV files into neo4j-compliant Graph files.
# The nextflow workflow, de-duplication and txt-to-csv
# is expected to have taken place.
#
# Here we create a directory (where the graph files will be placed)
# followed by the graph file format processing,
#Â which creates neo4j-compliant files based on the
# defined 'process_type'.

- import_tasks: sanity-check.yaml

# Processing (csv -> graph).
# The CSV processing must have taken place,
# but skip if our 'done' file exists in the output directory.

- name: Check CSV Done File
  stat:
    path: "{{ dedupe_path }}/done"
  register: csv_done_file

- name: Check Graph Done File
  stat:
    path: "{{ graph_path }}/done"
  register: process_done_file

- name: Assemble Graph Files ({{ process_type}})
  shell: >-
    ./process_{{ process_type }}_compounds.py
    {{ vendor_file }} {{ nodes_file }} {{ output }}
    --limit {{ process_limit }}
  args:
    chdir: "{{ scripts }}"
  vars:
    vendor_file: "{{ workflow_path }}/standardised-compounds.tab.gz"
    nodes_file: "{{ dedupe_path }}/nodes.csv.gz"
    output: "{{ graph_path }}"
  when:
  - not process_done_file.stat.exists
  - csv_done_file.stat.exists
