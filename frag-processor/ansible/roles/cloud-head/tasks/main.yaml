---

- import_tasks: create-munge-key.yaml

# There's some SSH stability connecting to servers.
# We assume fact gathering has been disabled for this role
# so here we wait for a connection and then invoke gathger facts (setup)
# ourselves.

- name: Wait for connection
  wait_for_connection:

- name: Gather facts
  setup:

# Off we go...

- name: Install head packages
  package:
    name:
    - epel-release
    - nfs-utils
    - nfs-utils-lib

# We need to be able to resolve between our name and IP
# on the head node. Workers also need to be able to
# locate the head node by name so their hosts files
#Â are also adjusted.

- name: Adjust /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: "{{ line }}"
    line: "{{ line }}"
  vars:
    line: "{{ hostvars['localhost']['head_addr'] }} {{ hostvars['localhost']['base_name'] }}-head"

# Setup NFS share and head node mounts

# Ansible provides a 'ansible_mounts' variable.
# It's a map of mounts and we just want to know if
# our mount (os_volume_mount) is in it.
#
# The map looks something like this (ansible 2.7.10): -
#
# "ansible_mounts": [{
#            "block_available": 122405946,
#            "block_size": 4096,
#            "block_total": 128982080,
#            "block_used": 6576134,
#            "device": "/dev/vdb",
#            "fstype": "ext4",
#            "inode_available": 32767989,
#            "inode_total": 32768000,
#            "inode_used": 11,
#            "mount": "/data",
#            "options": "rw,relatime,data=ordered",
#            "size_available": 501374754816,
#            "size_total": 528310599680,
#            "uuid": "dc613974-7fc1-48ad-9448-b78003aecaa5"
#        }]

- name: Inspect volume mount
  set_fact:
    mounted: "{{ ansible_mounts|json_query(query)|length }}"
  vars:
    query: "[?mount=='{{ os_volume_mount }}']"

- name: Create volume mount-point
  file:
    path: "{{ os_volume_mount }}"
    state: directory
    mode: 0777
    owner: root
    group: root
  when: not mounted|bool

- name: Unmount device
  mount:
    path: "{{ os_volume_mount }}"
    state: unmounted
  when: not mounted|bool

- name: Ensure device has a filesystem
  filesystem:
    fstype: ext4
    dev: "{{ os_volume_device }}"
  when: not mounted|bool

- name: Mount device
  mount:
    src: "{{ os_volume_device }}"
    path: "{{ os_volume_mount }}"
    fstype: ext4
    opts: defaults
    passno: 2
    state: mounted
  when: not mounted|bool

- name: Create NFS exports
  copy:
    content: "{{ os_volume_mount }} *(rw,no_root_squash)"
    dest: /etc/exports
    owner: root
    group: root

- name: Enable and restart NFS
  service:
    name: nfs
    enabled: yes
    state: restarted
