---

# De-duplicates the node and edge files,
# forming a grand 'nodes.csv.gz' and 'edges.csv.gz'
# in the root of the combiner directory.

# De-duplicate the Nodes...

- name: Check deduplicated Nodes
  stat:
    path: "{{ combiner_path }}/nodes.csv.gz"
  register: nodes_gz_file
  changed_when: False

- name: Deduplicate nodes
  shell: >-
    find . -name nodes.csv.gz -print
    | xargs gzip -d -c
    | sort --temporary-directory={{ tmp_path }} -u
    | gzip -c > combined-nodes.csv.gz
  environment:
    LC_ALL: C
  args:
    chdir: "{{ combiner_path }}"
  when: not nodes_gz_file.stat.exists

#- name: Remove original Nodes
#  shell: find . -name nodes.csv.gz -exec rm -f {} \;
#  args:
#    chdir: "{{ combiner_path }}"
#  when: not nodes_gz_file.stat.exists

- name: Rename combined nodes
  shell: mv combined-nodes.csv.gz nodes.csv.gz
  args:
    chdir: "{{ combiner_path }}"
  when: not nodes_gz_file.stat.exists

# De-duplicate the Edges...

- name: Check deduplicated Edges
  stat:
    path: "{{ combiner_path }}/edges.csv.gz"
  register: edges_gz_file
  changed_when: False

- name: Deduplicate Edges
  shell: >-
    find . -name edges.csv.gz -print
    | xargs gzip -d -c
    | sort --temporary-directory={{ tmp_path }} -u
    | gzip -c > combined-edges.csv.gz
  environment:
    LC_ALL: C
  args:
    chdir: "{{ combiner_path }}"
  when: not edges_gz_file.stat.exists

#- name: Remove original Edges
#  shell: find . -name edges.csv.gz -exec rm -f {} \;
#  args:
#    chdir: "{{ combiner_path }}"
#  when: not edges_gz_file.stat.exists

- name: Rename combined Edges
  shell: mv combined-edges.csv.gz edges.csv.gz
  args:
    chdir: "{{ combiner_path }}"
  when: not edges_gz_file.stat.exists
