---

# Check and create the Jenkins user roles

- name: Check Jenkins Role
  shell: oc adm policy who-can update imagestreamimages
  register: who_can_result
  changed_when: False

- name: Give Roles to Jenkins
  shell: "{{ item }}"
  loop:
  - oc adm policy add-role-to-user system:registry {{ jenkins_user }}
  - oc adm policy add-role-to-user system:image-builder {{ jenkins_user }}
  - oc adm policy add-role-to-user admin {{ jenkins_user }}
  - oc adm policy add-scc-to-user -z {{ jenkins_user }} privileged
  when: jenkins_user not in who_can_result.stdout

# Create the Jenkins PV
# This is where the Jenkins configuration is persisted.

- name: Check Jenkins PV
  shell: oc get pv
  register: jenkins_pv
  when: use_nfs
  changed_when: False

- name: Create Jenkins PV
  shell: >
    oc process -f {{ role_path }}/{{ t_dir }}/fs-jenkins-pv-nfs.yaml
    -p JENKINS_NAMESPACE={{ namespace }}
   | oc create -f -
  when:
  -  use_nfs
  - '"fs-jenkins" not in jenkins_pv.stdout'

# Create the Data Input PV/PVC
# This is where the Web and Graph data is expected to be found.

- name: Create Input PV
  shell: >
    oc process -f {{ role_path }}/{{ t_dir }}/fs-input-pv-nfs.yaml
    -p INPUT_NAMESPACE={{ namespace }}
    -p INPUT_VOLUME_NAME={{ input_vol_name }}
    | oc create -f -
  when:
  - use_nfs
  - '"fs-input" not in jenkins_pv.stdout'

# Create the Input PVCs

- name: Check Input PVC
  shell: oc get pvc
  register: input_pvc
  changed_when: False

- name: Create Input PVC
  shell: >
    oc process -f {{ role_path }}/{{ t_dir }}/fs-input-pvc.yaml
    -p INPUT_VOLUME_NAME={{ input_vol_name }}
    | oc create -f -
  when: '"fs-input-claim" not in input_pvc.stdout'

- name: Wait for Input PVC to become Bound
  shell: >
    oc get pvc/{{ item }} | grep Bound
  retries: 12
  delay: 5
  register: result
  until: result.rc == 0
  loop:
  - fs-input-claim
  when: '"fs-input-claim" not in input_pvc.stdout'
  changed_when: False

# Create the Buildah Slave Agent

- name: Check Buildah Agent ImageStream
  shell: oc get is
  register: agent_is
  changed_when: False

- name: Create Buildah Agent ImageStream
  shell: >
    oc process -f {{ role_path }}/{{ t_dir }}/fs-jenkins-slave-agent-is.yaml
    | oc create -f -
  when: '"buildah-slave" not in agent_is.stdout'

# Configure Jenkins?
# i.e. set secrets ctc.

- name: Configure Jenkins Jobs/Secrets
  shell: >
    {{ role_path }}/../../../jenkins/configure-cicd.py set test --force
  when: configure_jenkins
