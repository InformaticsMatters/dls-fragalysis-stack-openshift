---

# Deploy the project secrets

- name: Move to Fragalysis Project (Secrets)
  shell: oc project {{ namespace }}
  changed_when: False

- name: Check Secrets
  shell: oc get secrets
  register: fs_secrets
  changed_when: False

- name: Create ISPyB Secrets
  shell: >
    oc process -f {{ role_path }}/{{ t_dir }}/fs-secrets-ispyb.yaml
    -p ISPYB_USER={{ ispyb_user }}
    -p ISPYB_PASSWORD="{{ ispyb_password }}"
    | oc create -f -
  when: not fs_secrets.stdout | regex_search('^fs-ispyb-secrets\s', multiline=True)

- name: Create MySQL Secrets
  shell: >
    oc process -f {{ role_path }}/{{ t_dir }}/fs-secrets-mysql.yaml
    -p MYSQL_NAME={{ mysql_name }}
    -p MYSQL_NAMESPACE={{ namespace }}
    | oc create -f -
  when: not fs_secrets.stdout | regex_search('^fs-mysql-secrets\s', multiline=True)

- name: Create Graph Secrets
  shell: >
    oc process -f {{ role_path }}/{{ t_dir }}/fs-secrets-graph.yaml
    -p GRAPH_BOLT_URL={{ graph_bolt_url }}
    -p GRAPH_SERVICE_NAME={{ graph_svc }}
    | oc create -f -
  when: not fs_secrets.stdout | regex_search('^fs-graph-secrets\s', multiline=True)

- name: Create Web Secrets
  shell: >
    oc process -f {{ role_path }}/{{ t_dir }}/fs-secrets-web.yaml
    | oc create -f -
  when: not fs_secrets.stdout | regex_search('^fs-web-secrets\s', multiline=True)

- name: Create Backup Secrets
  shell: >
    oc process -f {{ role_path }}/{{ t_dir }}/fs-secrets-backup.yaml
    -p BACKUP_RSYNC_HOST={{ backup_rsync_host }}
    -p BACKUP_RSYNC_PATH={{ backup_rsync_path }}
    -p BACKUP_RSYNC_USER={{ backup_rsync_user }}
    -p BACKUP_RSYNC_PASS={{ backup_rsync_pass }}
    | oc create -f -
  when:
  - deploy_backup
  - enable_rsync_in_backup
  - not fs_secrets.stdout | regex_search('^fs-backup-secrets\s', multiline=True)

- name: Create Security-Probe Secrets
  shell: >
    oc process -f {{ role_path }}/{{ t_dir }}/fs-secrets-security-probe.yaml
    -p PROBE_OC_USER={{ probe_oc_user }}
    -p PROBE_OC_PASSWORD={{ probe_oc_password }}
    -p PROBE_MAILGUN_LOGIN={{ probe_mailgun_login }}
    -p PROBE_MAILGUN_PASSWORD={{ probe_mailgun_password }}
    | oc create -f -
  when: not fs_secrets.stdout | regex_search('^fs-security-probe-secrets\s', multiline=True)
