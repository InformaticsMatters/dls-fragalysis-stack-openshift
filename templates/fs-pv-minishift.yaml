---

# The Application's Persistent Volumes (Minishift).
#
# This expects these volumes in Minishift:
#
#   $(MINI_PATH)/pv-fs-cartridge-data
#   $(MINI_PATH)/pv-fs-neo4j-data
#   $(MINI_PATH)/pv-fs-neo4j-log
#   $(MINI_PATH)/pv-fs-pg-data
#   $(MINI_PATH)/pv-fs-web-log
#
# oc process -f fs-pv-minishift.yaml | oc create -f -
# oc delete pv --selector template=fs-pv-minishift

kind: Template
apiVersion: v1
metadata:
  name: fs-pv-minishift
  annotations:
    description: Fragalysis Stack's Persistent Volumes (using Minishift)
    tags: fragalysis
labels:
  template: fs-pv-minishift

parameters:

- name: MINI_PATH
  value: /mnt/sda1/var/lib/minishift/openshift.local.volumes

- name: CARTRIDGE_NAMESPACE
  value: fragalysis-stack
- name: CARTRIDGE_PV_SIZE
  value: 50Gi

- name: NEO4J_NAMESPACE
  value: fragalysis-stack
- name: NEO4J_DATA_PV_SIZE
  value: 40Gi
- name: NEO4J_LOG_PV_SIZE
  value: 2Gi

- name: PG_NAMESPACE
  value: fragalysis-stack
- name: PG_PV_SIZE
  value: 50Gi

- name: WEB_NAMESPACE
  value: fragalysis-stack
- name: WEB_LOG_PV_SIZE
  value: 2Gi

objects:

# ---------------------
# Graph (Neo4J) Volumes
# ---------------------

- kind: PersistentVolume
  apiVersion: v1
  metadata:
    name: fs-neo4j-data
  spec:
    capacity:
      storage: ${NEO4J_DATA_PV_SIZE}
    accessModes:
    - ReadWriteMany
    persistentVolumeReclaimPolicy: Recycle
    hostPath:
      path: ${MINI_PATH}/pv-fs-neo4j-data/registry
    claimRef:
      name: fs-neo4j-data-claim
      namespace: ${NEO4J_NAMESPACE}

- kind: PersistentVolume
  apiVersion: v1
  metadata:
    name: fs-neo4j-log
  spec:
    capacity:
      storage: ${NEO4J_LOG_PV_SIZE}
    accessModes:
    - ReadWriteMany
    persistentVolumeReclaimPolicy: Recycle
    hostPath:
      path: ${MINI_PATH}/pv-fs-neo4j-log/registry
    claimRef:
      name: fs-neo4j-log-claim
      namespace: ${NEO4J_NAMESPACE}

# ---------------------------
# Database (Postgres) Volumes
# ---------------------------

- kind: PersistentVolume
  apiVersion: v1
  metadata:
    name: fs-pg-data
  spec:
    capacity:
      storage: ${PG_PV_SIZE}
    accessModes:
    - ReadWriteMany
    persistentVolumeReclaimPolicy: Recycle
    hostPath:
      path: ${MINI_PATH}/fs-pg-data/registry
    claimRef:
      name: fs-pg-data-claim
      namespace: ${PG_NAMESPACE}

# -------------------------
# Cartridge (RDKit) Volumes
# -------------------------

- kind: PersistentVolume
  apiVersion: v1
  metadata:
    name: fs-cartridge-data
  spec:
    capacity:
      storage: ${CARTRIDGE_PV_SIZE}
    accessModes:
    - ReadWriteMany
    persistentVolumeReclaimPolicy: Recycle
    hostPath:
      path: ${MINI_PATH}/fs-cartridge-data/registry
    claimRef:
      name: fs-cartridge-data-claim
      namespace: ${CARTRIDGE_NAMESPACE}

# -----------
# Web Volumes
# -----------

- kind: PersistentVolume
  apiVersion: v1
  metadata:
    name: fs-web-log
  spec:
    capacity:
      storage: ${WEB_LOG_PV_SIZE}
    accessModes:
    - ReadWriteMany
    persistentVolumeReclaimPolicy: Recycle
    hostPath:
      path: ${MINI_PATH}/fs-web-log/registry
    claimRef:
      name: fs-web-log-claim
      namespace: ${WEB_NAMESPACE}
