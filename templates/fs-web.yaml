---

# The Fragalysis Stack's Web (Front-End) deployment.
#
# oc process -f fs-web.yaml | oc create -f -
# oc delete all --selector template=fs-web

kind: Template
apiVersion: v1
metadata:
  name: fs-web
  annotations:
    description: Fragalysis Stack's Web Definition
    tags: fragalysis,web
labels:
  template: fs-web

parameters:

- name: WEB_NAMESPACE
  value: fragalysis-stack
- name: WEB_TAG
  value: 1.0.0
- name: WEB_REPLICAS
  value: '1'

objects:

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: web
    namespace: ${WEB_NAMESPACE}
  spec:
    replicas: ${WEB_REPLICAS}
    selector:
      name: web
    template:
      metadata:
        labels:
          name: web
      spec:
#        serviceAccountName: diamond
        # Init Containers
        initContainers:
        - image: busybox
          name: wait-for-db
          command: ['sh', '-c', 'until nslookup db; do echo waiting for db; sleep 1; done;']
        - image: busybox
          name: wait-for-graph
          command: ['sh', '-c', 'until nslookup graph; do echo waiting for graph; sleep 1; done;']
        - image: busybox
          name: wait-for-cartridge
          command: ['sh', '-c', 'until nslookup cartridge; do echo waiting for cartridge; sleep 1; done;']
        # Application containers
        containers:
        - image: xchem/fragalysis-stack:${WEB_TAG}
          name: web
          readinessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 1
            tcpSocket:
              port: 80
          livenessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 1
            tcpSocket:
              port: 80
          ports:
          - containerPort: 80
          volumeMounts:
          - name: fs-web-log
            mountPath: /code/logs
          - name: fs-web-media
            mountPath: /code/media
        volumes:
        - name: fs-web-log
          persistentVolumeClaim:
            claimName: fs-web-log-claim
        - name: fs-web-media
          persistentVolumeClaim:
            claimName: fs-web-media-claim
        restartPolicy: Always

- kind: Service
  apiVersion: v1
  metadata:
    name: web
    namespace: ${WEB_NAMESPACE}
  spec:
    ports:
    - name: http
      port: 8000
      targetPort: 80
    selector:
      name: web

- kind: Route
  apiVersion: v1
  metadata:
    name: web
  spec:
    to:
      kind: Service
      name: web

