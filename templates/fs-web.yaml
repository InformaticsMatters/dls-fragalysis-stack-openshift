---

# The Fragalysis Stack's Web (Front-End) deployment.
#
# oc process -f fs-web.yaml | oc create -f -
# oc delete all,route --selector template=fs-web

kind: Template
apiVersion: v1
metadata:
  name: fs-web
  annotations:
    description: Fragalysis Stack's Web Definition
    tags: fragalysis,web
labels:
  template: fs-web

parameters:

- name: BUSYBOX_IMAGE
  value: busybox:1.28.0

- name: WEB_NAMESPACE
  value: fragalysis-stack
- name: WEB_TAG
  value: 1.0.0
- name: WEB_REPLICAS
  value: '1'

objects:

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: web
    namespace: ${WEB_NAMESPACE}
  spec:
    replicas: ${WEB_REPLICAS}
    selector:
      name: web
    template:
      metadata:
        labels:
          name: web
      spec:
        serviceAccountName: diamond

        # Init Containers
        initContainers:
        - image: ${BUSYBOX_IMAGE}
          name: wait-for-db
          command:
          - 'sh'
          - '-c'
          - 'until nslookup db; do echo waiting for db; sleep 1; done;'
        - image: ${BUSYBOX_IMAGE}
          name: wait-for-graph
          command:
          - 'sh'
          - '-c'
          - 'until nslookup neo4j; do echo waiting for neo4j; sleep 1; done;'
        - image: ${BUSYBOX_IMAGE}
          name: wait-for-cartridge
          command:
          - 'sh'
          - '-c'
          - 'until nslookup cartridge; do echo waiting for cartridge; sleep 1; done;'

        # Application containers
        containers:
        - image: informaticsmatters/fragalysis-stack:${WEB_TAG}
          name: web
# The new fragalysis stack is slow at starting.
# so the readiness/liveness probes have been disabled for now...
#          readinessProbe:
#            initialDelaySeconds: 240
#            timeoutSeconds: 1
#            tcpSocket:
#              port: 80
#          livenessProbe:
#            initialDelaySeconds: 480
#            timeoutSeconds: 1
#            tcpSocket:
#              port: 80
          env:
          - name: WEB_DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: fs-web-secrets
                key: django-secret-key
          - name: WEB_DJANGO_SUPERUSER_NAME
            valueFrom:
              secretKeyRef:
                name: fs-web-secrets
                key: django-superuser-name
          - name: WEB_DJANGO_SUPERUSER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: fs-web-secrets
                key: django-superuser-password
          - name: WEB_DJANGO_SUPERUSER_EMAIL
            valueFrom:
              secretKeyRef:
                name: fs-web-secrets
                key: django-superuser-email
          ports:
          - containerPort: 80
          volumeMounts:
          - name: fs-web-log
            mountPath: /code/logs
          - name: fs-web-media
            mountPath: /code/media
        volumes:
        - name: fs-web-media
          persistentVolumeClaim:
            claimName: fs-web-media-claim
        - name: fs-web-log
          persistentVolumeClaim:
            claimName: fs-web-log-claim
        restartPolicy: Always

- kind: Service
  apiVersion: v1
  metadata:
    name: web
    namespace: ${WEB_NAMESPACE}
  spec:
    ports:
    - name: http
      port: 8000
      targetPort: 80
    selector:
      name: web

- kind: Route
  apiVersion: v1
  metadata:
    name: web
  spec:
    to:
      kind: Service
      name: web
