---

# The Fragalysis Stack's database backup deployment (daily, weekly, monthly).
#
# oc process -f fs-db-backup-dwm.yaml | oc create -f -
# oc delete all --selector template=fs-db-backup-dwm

kind: Template
apiVersion: v1
metadata:
  name: fs-db-backup-dwm
  annotations:
    description: Fragalysis Stack's Postgres Backup
    tags: fragalysis,db,postgres
labels:
  template: fs-db-backup-dwm

parameters:

- name: BACKUP_REGISTRY
  value: 'docker.io'
- name: BACKUP_IMAGE
  value: 'informaticsmatters/sql-backup'
- name: BACKUP_TAG
  value: 'stable'
- name: BACKUP_NODE_SIZE_SELECTOR
  value: 'small'
- name: BACKUP_D_SCHEDULE
  value: '55 0 * * *'
- name: BACKUP_W_SCHEDULE
  value: '50 0 * * 0'
- name: BACKUP_M_SCHEDULE
  value: '45 0 1 * *'
- name: BACKUP_H_COUNT
  value: '24'
- name: BACKUP_D_COUNT
  value: '6'
- name: BACKUP_W_COUNT
  value: '3'
- name: BACKUP_M_COUNT
  value: '11'

objects:

# The DAILY CronJob (at 00:55)
# This job will copy the oldest hourly backup (when there are 24)
# Keeping the last 6 backups in the directory /backup/daily
- kind: CronJob
  apiVersion: batch/v1beta1
  metadata:
    name: db-backup-daily
  spec:
    schedule: ${BACKUP_D_SCHEDULE}
    startingDeadlineSeconds: 180
    concurrencyPolicy: Forbid
    jobTemplate:
      spec:
        template:
          metadata:
            labels:
              name: backup-daily
          spec:
            nodeSelector:
              size: ${BACKUP_NODE_SIZE_SELECTOR}
            serviceAccountName: diamond

            # Application containers
            containers:
            - image: ${BACKUP_REGISTRY}/${BACKUP_IMAGE}:${BACKUP_TAG}
              name: backup
              imagePullPolicy: IfNotPresent
              volumeMounts:
              - name: fs-data-backup
                mountPath: /backup
              env:
              - name: BACKUP_TYPE
                value: daily
              - name: BACKUP_COUNT
                value: ${BACKUP_D_COUNT}
              - name: BACKUP_PRIOR_TYPE
                value: hourly
              - name: BACKUP_PRIOR_COUNT
                value: ${BACKUP_H_COUNT}
            volumes:
            - name: fs-data-backup
              persistentVolumeClaim:
                claimName: fs-db-backup-claim
            restartPolicy: Never

# The WEEKLY CronJob (at 00:50 on Sunday)
# This job will copy the oldest daily backup (when there are 6)
# Keeping the last 3 backups in the directory /backup/weekly
- kind: CronJob
  apiVersion: batch/v1beta1
  metadata:
    name: db-backup-weekly
  spec:
    schedule: ${BACKUP_W_SCHEDULE}
    startingDeadlineSeconds: 180
    concurrencyPolicy: Forbid
    jobTemplate:
      spec:
        template:
          metadata:
            labels:
              name: backup-weekly
          spec:
            nodeSelector:
              size: ${BACKUP_NODE_SIZE_SELECTOR}
            serviceAccountName: diamond

            # Application containers
            containers:
            - image: ${BACKUP_REGISTRY}/${BACKUP_IMAGE}:${BACKUP_TAG}
              name: backup
              imagePullPolicy: IfNotPresent
              volumeMounts:
              - name: fs-data-backup
                mountPath: /backup
              env:
              - name: BACKUP_TYPE
                value: weekly
              - name: BACKUP_COUNT
                value: ${BACKUP_W_COUNT}
              - name: BACKUP_PRIOR_TYPE
                value: daily
              - name: BACKUP_PRIOR_COUNT
                value: ${BACKUP_D_COUNT}
            volumes:
            - name: fs-data-backup
              persistentVolumeClaim:
                claimName: fs-db-backup-claim
            restartPolicy: Never

# The MONTHLY CronJob (at 00:45 on the 1st of each month)
# This job will copy the oldest weekly backup (when there are 3)
# Keeping the last 11 backups in the directory /backup/monthly
- kind: CronJob
  apiVersion: batch/v1beta1
  metadata:
    name: db-backup-monthly
  spec:
    schedule: ${BACKUP_M_SCHEDULE}
    startingDeadlineSeconds: 180
    concurrencyPolicy: Forbid
    jobTemplate:
      spec:
        template:
          metadata:
            labels:
              name: backup-monthly
          spec:
            nodeSelector:
              size: ${BACKUP_NODE_SIZE_SELECTOR}
            serviceAccountName: diamond

            # Application containers
            containers:
            - image: ${BACKUP_REGISTRY}/${BACKUP_IMAGE}:${BACKUP_TAG}
              name: backup
              imagePullPolicy: IfNotPresent
              volumeMounts:
              - name: fs-data-backup
                mountPath: /backup
              env:
              - name: BACKUP_TYPE
                value: monthly
              - name: BACKUP_COUNT
                value: ${BACKUP_M_COUNT}
              - name: BACKUP_PRIOR_TYPE
                value: weekly
              - name: BACKUP_PRIOR_COUNT
                value: ${BACKUP_W_COUNT}
            volumes:
            - name: fs-data-backup
              persistentVolumeClaim:
                claimName: fs-db-backup-claim
            restartPolicy: Never
